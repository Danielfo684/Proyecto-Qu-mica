package Proyecto_Quimica.InterfazGrafica;

import Proyecto_Quimica.BBDD.Conexion;
import java.sql.Connection;
import javax.swing.JOptionPane;
import java.sql.SQLException;

public class Inicio extends javax.swing.JFrame {

    public static Connection conexionGlobal;
    
    public Inicio() {
        setSize(500, 500); //establece el tamaño de la ventana principal
        setDefaultCloseOperation(EXIT_ON_CLOSE);  //Hace que el programa se 
        // cierre al cerrar la ventana
        initComponents();
        setTitle("Gestor de Química"); //Título para la ventana del JFrame
        setLocationRelativeTo(null);  // nos centra la ventana de JFrame en el centro de la pantalla
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        entrarAlumno = new javax.swing.JButton();
        entrarProfesor = new javax.swing.JButton();
        tUsuario = new javax.swing.JLabel();
        tContraseña = new javax.swing.JLabel();
        textoUsuario = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        textoContraseña = new javax.swing.JPasswordField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(0, 204, 204));
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        entrarAlumno.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        entrarAlumno.setText("Entrar");
        entrarAlumno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                entrarAlumnoActionPerformed(evt);
            }
        });

        entrarProfesor.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        entrarProfesor.setText("Entrar como profesor");
        entrarProfesor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                entrarProfesorActionPerformed(evt);
            }
        });

        tUsuario.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        tUsuario.setText("Usuario:");

        tContraseña.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        tContraseña.setText("Contraseña:");

        textoUsuario.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        textoUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textoUsuarioActionPerformed(evt);
            }
        });

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Proyecto_Quimica/InterfazGrafica/zaidinvergeles.png"))); // NOI18N

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel4.setText("Inicio de sesión como alumn@");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel5.setText("Inicio de sesión como profesor/a");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(229, 229, 229)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 650, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(191, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(152, 152, 152)
                        .addComponent(jLabel4))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(230, 230, 230)
                        .addComponent(entrarAlumno)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tContraseña)
                            .addComponent(entrarProfesor)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(tUsuario)
                                .addGap(52, 52, 52)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(textoContraseña, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(textoUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addGap(73, 73, 73))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(49, 49, 49)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tUsuario)
                    .addComponent(textoUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tContraseña)
                    .addComponent(entrarAlumno)
                    .addComponent(textoContraseña, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(entrarProfesor)
                .addContainerGap(73, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void entrarAlumnoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_entrarAlumnoActionPerformed
        boolean esProfesor = false;
        
        // Si son correctos, conectamos la base de datos
            boolean conexionCorrecta = conectarBD(esProfesor);

            if (conexionCorrecta){
                // SI la conexion se hace con exito, cerramos la ventana de inicio de sesión
                VistaPrincipal vistaPrincipal = new VistaPrincipal(esProfesor);
                vistaPrincipal.setVisible(true);
                //este método hace que las ventanas no se acumulen y así solo tenemos la ventana que queremos
                this.dispose();  
            }else{
               JOptionPane.showMessageDialog(Inicio.this, "Error al conectar la base de datos."); 
            }
    }//GEN-LAST:event_entrarAlumnoActionPerformed

    private void entrarProfesorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_entrarProfesorActionPerformed
        boolean esProfesor = true;
        // Verificar usuario y contraseña 
        boolean credencialesCorrectas = validarCredenciales();

        if(credencialesCorrectas){
            // Si son correctos, conectamos la base de datos
            boolean conexionCorrecta = conectarBD(esProfesor);

            if (conexionCorrecta){
                // SI la conexion se hace con exito, cerramos la ventana de inicio de sesión
                VistaPrincipal vistaPrincipal = new VistaPrincipal(esProfesor);
                vistaPrincipal.setVisible(true);
                //este método hace que las ventanas no se acumulen y así solo tenemos la ventana que queremos
                this.dispose();  
            }else{
               JOptionPane.showMessageDialog(Inicio.this, "Error al conectar la base de datos."); 
            }
        }else{
            JOptionPane.showMessageDialog(Inicio.this, "Usuario o contraseña incorrecta.");
        } 
    }//GEN-LAST:event_entrarProfesorActionPerformed

    private void textoUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textoUsuarioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textoUsuarioActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Inicio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Inicio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Inicio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Inicio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Inicio().setVisible(true);
            }
        });

    }
    
    public static Connection getConexionGlobal(){
        return conexionGlobal;
    }
    
    private boolean validarCredenciales(){
        // Obtener usuarios y contraseñas escritos por el usuario
        String usuarioInput = textoUsuario.getText();
        // la contraseña la convertimos en String para poder compararla con la contraseña guardada
        String contraseñaInput = new String(textoContraseña.getPassword());

        // Obtencion del usuario y contraseñas que deberia tener la base de datos (guardados en quimicos.config)
        Conexion conexionDB = new Conexion();
        // Llamamos al metodo getConfiguracion() de la clase ConexionBD.java donde
        // se lee el fichero de configuracion y guarda las propiedades del fichero en variables.
        conexionDB.getConfiguracion();
        String usuario = conexionDB.getUsuario();
        String contraseña = conexionDB.getContraseña();

        // Comprobar si las credenciales coinciden
        return usuarioInput.equals(usuario) && contraseñaInput.equals(contraseña);

    }

    private boolean conectarBD(boolean esProfesor) {
        Conexion conexionDB = new Conexion();
        conexionDB.getConfiguracion();    

        try {
            if (esProfesor) {
                conexionGlobal = conexionDB.conectarProfesor();
            } else {
                conexionGlobal = conexionDB.conectarAlumno();
            }
            return true;          
        } catch(Exception e){
            System.err.println("Error al conectar la base de datos " + e.getMessage());
            return false;
        }
    }
 

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton entrarAlumno;
    private javax.swing.JButton entrarProfesor;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel tContraseña;
    private javax.swing.JLabel tUsuario;
    private javax.swing.JPasswordField textoContraseña;
    private javax.swing.JTextField textoUsuario;
    // End of variables declaration//GEN-END:variables

}
